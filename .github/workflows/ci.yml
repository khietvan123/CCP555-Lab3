name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: fragments
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Check for package-lock.json
        id: check_lock
        run: |
          if [ -f fragments/package-lock.json ]; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Cache node_modules (only if lockfile exists)
        if: steps.check_lock.outputs.exists == 'true'
        uses: actions/cache@v3
        with:
          path: fragments/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('fragments/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install node dependencies
        run: |
          if [ -f fragments/package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run ESLint
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: fragments
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Check for package-lock.json
        id: check_lock2
        run: |
          if [ -f fragments/package-lock.json ]; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Cache node_modules (only if lockfile exists)
        if: steps.check_lock2.outputs.exists == 'true'
        uses: actions/cache@v3
        with:
          path: fragments/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('fragments/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install node dependencies
        run: |
          if [ -f fragments/package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run Tests
        run: npm test
